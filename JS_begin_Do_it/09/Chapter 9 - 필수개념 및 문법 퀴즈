Chapter 9 - 필수개념 및 문법 퀴즈

1. querySelector() 함수는 여러 요소를 한꺼번에 가져와서 배열 형태로 저장합니다 - X
    // querySelector() 함수는 요소 하나를 가져옵니다.
    // 여러 요소를 한 꺼번에 가져와서 배열 형태로 저장하는 함수는 querySelectorAll() 입니다.

2. ID 값이 billingName인 요소를 가져올 때 사용하는 소스 코드는 document.querySelector("#billingName"); 입니다.
    // class 값이 billingName 일 경우 document.querySelector(".billingName"); 으로 접근합니다.

3. 폼에서 "name" 속성을 사용해 접근하려면 <form> 태그 뿐만 아니라 접근하려는 폼 요소에 모두 "name" 속성이 지정되어 있는지 확인해야합니다.
    // ex - document.testForm.userId
    // document.폼의name.하위요소의name 으로 접근

4. 폼 요소에 id나 class, name 같은 속성이 없을 경우 배열을 사용해 접근하는데, 폼에 접근하려면 "forms" 속성을 사용하고,
    폼 요소에 접근하려면 "elements" 속성을 사용합니다.
    // ex - document.forms[0].elements[0] -> 첫 번째 폼의 첫 번째 요소 접근.
    // document.forms[0].elements -> 첫 번째 폼의 하위 요소 배열로 확인.
    // document.forms -> 문서의 폼 에 대해 배열로 확인.

5. 사용자가 [아이디] 필드에 내용을 입력했을 때 바로 입력한 글자 수를 확인하도록 소스코드를 작성하려면 "change" 이벤트 속성을 사용해야 합니다.
    // onChange , change 속성은 "텍스트 필드에 내용을 입력하고 빠져나온 순간" 을 정의한 이벤트.

6. Select 목록에 있는 항목에서 어떤 항목이 선택되었는지 확인하려면 "selectedIndex" 속성을 살펴봅니다.
    // options 속성을 활용하면 selectedIndex 속성의 값을 확인 할 수 있다.
    // ex - document.testForm.major.options;
    // ex - document.querySelector("#major").options;
    // id 값이 있다면, querySelector 를 활용해서도 selectedIndex 를 확인하고 응용할 수 있다.

7. 라디오 버튼 요소나 체크상자 요소에는 checked 속성이 있는데, 기본 값으로는 "false" 로 정의됩니다. 
    그리고 해당 항목을 선택하면 값이 "true" 로 바뀝니다.
    // 이를 활용해서 click 이벤트 발생 시 checked 속성의 값이 false 인지, true 인지에 따라 추가 기능을 구현할 수 있음.