package OkJava;

//org.opentutorials.iot 패키지의 각각의 클래스 불러오기.
import org.opentutorials.iot.Elevator;	// Elevator 클래스
import org.opentutorials.iot.Security;	// Security 클래스
import org.opentutorials.iot.Lighting;	// Lighting 클래스


public class OkJavaGoInHome {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Elevator Call
			// org.opentutorials.iot.Elevator myElevator = new org.opentutorials.iot.Elevator("JAVA APT 507");
				// myElevator 인스턴스 생성.
		
		// 코드가 길어지므로 Elevator 클래스 import 후 인스턴스 생성
		Elevator myElevator = new Elevator("JAVA APT 507");
				// myElevator 인스턴스 생성 - Elevator 객체에 "JAVA APT 507" 인자를 전달한 인스턴스.
						// Elevator 객체에는 ID 파라미터가 정의 되어 있음.
		
		myElevator.callForUp(1);	// 엘레베이터를 1층으로 보내도록.
				// myElevator. 입력 시 하위 메소드 확인 가능.
		
		
		// Security off
		Security mySecurity = new Security("JAVA APT 507");
				// mySecuriy 인스턴스 생성.
		mySecurity.off();	// 시큐리티 기능이 해제되도록.
		
		
		// Light on
		Lighting hallLamp = new Lighting("JAVA APT 507 / Hall Lamp");
				// hallLamp 인스턴스 생성.	/ Hall Lamp == 현관등.
		hallLamp.on();	// 현관등 불 켜기.
		// 코드 스니펫 기능은 접두사로 시작하는 모든 컴포넌트를 추천해 줌.
		
		Lighting floorLamp = new Lighting("JAVA APT 507 / Floor Lamp");
				// floorLamp 인스턴스 생성 / Floor Lamp == 복도 전등.
		floorLamp.on();	// 복도등 불 켜기.
		
		System.out.println("지금은 단순히 텍스트로 결과를 출력할 뿐이지만, "
				+ "\n활용하는 오픈 소스가 실제 IOT 기기에 적용되는 소스라면? 엄청나네.");
	}
}
